Technical Info
==============

KEEP AN EYE ON: 264031 - http://www.vegetablerevolution.co.uk/forum/talk/1081007796/34/ - doesn't seem to convert after the weird char. UTF-8?


Example HTML for testing my parser:

<a href="http://google.com"><b><i>a</i></b></a><a href="http://google.com"><b><i>sd</i></b></a><a href="http://google.com"><b><i>f</i></b></a><a href="http://google.com"><b><i>as</i></b></a><a href="http://google.com"><b><i>df</i></b></a><b><i>&nbsp;Lorem <span class="Apple-style-span" style="font-weight: normal;"><span class="Apple-style-span" style="font-style: normal;">ipsum</span></span> dolor sit</i> amet.</b><div><b><img src="http://google.com/intl/en_ALL/images/srpr/logo1w.png"><br></b></div><div><b><br></b></div>

SHOULD BECOME:

<a href="http://google.com">
  <b>
    <i>asdfasdf</i>
  </b>
</a>

<b>
  <i>Lorem</i>
</b>

<i>ipsum</i>

<b>
  <i>dolor sit</i>
</b>

<b>amet</b>

<img src="http://google.com/intl/en_ALL/images/srpr/logo1w.png">




Just some technical info that I extracted from comments in some files. Basically just some code to illustrate points.

Always use regex route matching, not the named captures. It's very neat and tidy for sure - however since I'm doing proper validation of params, I'd just have to run the named match through a regex anyway - might as well cut down the amount of code and have that same regex match the route itself


Note we keep bans in a file - if you are banned, you can't even cause a database hit - even to create a session. Censored words can be in the DB.


MEMORY TABLE == approx 1,720,536 rows with 2x id and datetime

bank on max of 1 million, directories for VR4 have a max of 32k threads, each holding ~ 10 users. so 320k items. However, this goes back MUCH further than 28 days.

Priv messages are an innoDB


on dev box, getting about 300 inserts per second.


134,217,728 -- max_heap_table_size  (max number of rows)


Can't update table 'thread_read_receipt' in stored function/trigger because it is already used by statement which invoked this stored function/trigger

Put it on the messages table - after insert (best I can do, apart from cron or application logic - maybe put it in the viewing thread)

DELETE FROM thread_read_receipt WHERE `datetime` < DATE_SUB(NOW(), INTERVAL 28 day)



SELECT `from`, `to`, MAX(id) AS id, has_read
FROM mail
LEFT JOIN mail_read_receipt ON id = mail_id
WHERE `TO` = 1
GROUP BY `FROM`
ORDER BY id DESC


SELECT * FROM mail

WHERE `to` = '1'
AND `from` = '2'

ORDER BY mail.id DESC


Format of thread data structure - with examples

    print $meta->{'subject'};
    foreach my $viewer ( @{ $meta->{'viewers'} } ) {
        print $viewer->{'username'};
    }

    foreach my $message ( $thread ) {
        print $message->{'username'};
        print $message->{'body'};

        foreach my $quote ( @{ $message->{'quotes'} } ) {
            print $quote->{'username'};
            print $quote->{'body'};
        }
    }

    # Idiom for getting correct number of ? from an array
    join(',', map('?', @list));

    %meta = {
        'subject' => 'blah',
        'viewers' => [
            {   'user_id'  => '1',
                'username' => 'admin',
            },
            {   'user_id'  => '1',
                'username' => 'admin',
            },
        ],
    };

    %thread = {
        '1000' => {
            'body'        => 'nlah',
            'user_id'     => '1',
            'username'    => 'admin',
            'displayname' => 'LoonyPandora',
            'datetime'    => '2010-01-01 11:11:11',
            'quotes'      => {
                '999' => {
                    'user_id'     => '1',
                    'username'    => 'admin',
                    'displayname' => 'LoonyPandora',
                    'content'     => 'blah',
                    'datetime'    => '2010-01-01 11:11:11',
                },
                '998' => {
                    'user_id'     => '1',
                    'username'    => 'admin',
                    'displayname' => 'LoonyPandora',
                    'content'     => 'blah',
                    'datetime'    => '2010-01-01 11:11:11',
                },
            },
        },
    };
