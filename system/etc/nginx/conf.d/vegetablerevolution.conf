# All the things we should respond to and redirect on
server {
  server_name www.vegetablerevolution.com;
  return 301 $scheme://vegetablerevolution.co.uk$request_uri;
}

server {
  server_name vegetablerevolution.com;
  return 301 $scheme://vegetablerevolution.co.uk$request_uri;
}

server {
  server_name www.vegetablerevolution.co.uk;
  return 301 $scheme://vegetablerevolution.co.uk$request_uri;
}


# The actual server
server {
    listen 80 default_server;
    server_name vegetablerevolution.co.uk;

    root /usr/share/nginx/vegetablerevolution/public;

    # Drops obviously bad / malformed requests before we go anywhere else
    include conf.d/drop.conf;

    # Default never cache anything
    expires epoch;

    # Default access log
    access_log "/var/log/nginx/access.log" json;

    # Don't need to log accesses to these files
    location ~* (?:favicon\.ico|robots\.txt)$ {
        expires 1w;
        access_log off;

        # All the rewrites to give pretty URLS
        include conf.d/rewrites.conf;
        try_files /$uri @proxy;
    }

    # Images, Video, Audio, HTC Behvaiours, WebFonts. Unlikely to change.
    location ~* \.(?:jpg|jpeg|gif|png|svg|svgz|ttf|otf|woff|eot|mp4|mp3|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log "/var/log/nginx/media.log" json;

        # All the rewrites to give pretty URLS
        include conf.d/rewrites.conf;
        try_files /$uri @proxy;
    }

    # CSS, JavaScript & Source Maps. We use cachebusting filenames when necessary.
    location ~* \.(?:css|js|map)$ {
        expires 1M;
        access_log "/var/log/nginx/asset.log" json;

        # All the rewrites to give pretty URLS
        include conf.d/rewrites.conf;
        try_files /$uri @proxy;
    }

    location / {
        expires epoch;
        access_log "/var/log/nginx/upstream.log" json;

        # All the rewrites to give pretty URLS
        include /etc/nginx/conf.d/rewrites.conf;
        try_files /$uri @proxy;
    }

    # Send it to the PSGI Server
    location @proxy {
        proxy_read_timeout 60;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass http://localhost:5000;
        break;
    }
}
